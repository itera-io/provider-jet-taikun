name: Docker Image CI

on:
  release:
  workflow_dispatch: {}

env:
  # Common versions
  GO_VERSION: "1.19"
  GOLANGCI_VERSION: "v1.50.0"
  DOCKER_BUILDX_VERSION: "v0.8.2"

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          install: true

      - name: Login to Itera Docker Container Registry
        env:
          USERNAME: ${{ secrets.ITERAREPO_USERNAME }}
          TOKEN: ${{ secrets.ITERAREPO_TOKEN }}
        run: |
          echo $TOKEN | docker login repo.itera.io:5000 --username $USERNAME --password-stdin

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Fetch History
        run: git fetch --prune --unshallow

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Find the Go Build Cache
        id: go
        run: echo "::set-output name=cache::$(make go.cachedir)"

      - name: Cache the Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go.outputs.cache }}
          key: ${{ runner.os }}-build-publish-artifacts-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-publish-artifacts-

      - name: Cache Go Dependencies
        uses: actions/cache@v2
        with:
          path: .work/pkg
          key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-pkg-

      - name: Vendor Dependencies
        run: make vendor vendor.check

      - name: Build Artifacts
        run: make -j2 build.all BUILD_REGISTRY="repo.itera.io:5000/crossplane-provider"
        env:
          # We're using docker buildx, which doesn't actually load the images it
          # builds by default. Specifying --load does so.
          BUILD_ARGS: "--load"

      - name: Upload Artifacts to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: _output/**

      - name: Push provider's images
        env:
          CONTROLLER_IMG: "repo.itera.io:5000/crossplane-provider/provider-jet-taikun-controller-amd64"
          NORMAL_IMG: "repo.itera.io:5000/crossplane-provider/provider-jet-taikun-amd64"
          LATEST_TAG: "latest"
        run: |
          docker images
          docker tag $CONTROLLER_IMG $CONTROLLER_IMG:$LATEST_TAG
          docker tag $NORMAL_IMG $NORMAL_IMG:$LATEST_TAG
          docker push $CONTROLLER_IMG:$LATEST_TAG
          docker push $NORMAL_IMG:$LATEST_TAG
