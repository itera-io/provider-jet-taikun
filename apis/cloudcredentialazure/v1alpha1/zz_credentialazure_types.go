/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CredentialAzureObservation struct {

	// The creator of the Azure cloud credential.
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates whether the Azure cloud credential is the default one.
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// Time and date of last modification.
	LastModified *string `json:"lastModified,omitempty" tf:"last_modified,omitempty"`

	// The last user to have modified the Azure cloud credential.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty" tf:"last_modified_by,omitempty"`

	// The name of the organization which owns the Azure cloud credential.
	OrganizationName *string `json:"organizationName,omitempty" tf:"organization_name,omitempty"`
}

type CredentialAzureParameters struct {

	// The Azure availability zone for the location.
	// +kubebuilder:validation:Required
	AvailabilityZone *string `json:"availabilityZone" tf:"availability_zone,omitempty"`

	// The Azure client ID.
	// +kubebuilder:validation:Required
	ClientIDSecretRef v1.SecretKeySelector `json:"clientIdSecretRef" tf:"-"`

	// The Azure client secret.
	// +kubebuilder:validation:Required
	ClientSecretSecretRef v1.SecretKeySelector `json:"clientSecretSecretRef" tf:"-"`

	// The Azure location.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Indicates whether to lock the Azure cloud credential. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Lock *bool `json:"lock,omitempty" tf:"lock,omitempty"`

	// The name of the Azure cloud credential.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The ID of the organization which owns the Azure cloud credential.
	// +crossplane:generate:reference:type=github.com/itera-io/provider-jet-taikun/apis/organization/v1alpha1.Organization
	// +kubebuilder:validation:Optional
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// Reference to a Organization in organization to populate organizationId.
	// +kubebuilder:validation:Optional
	OrganizationIDRef *v1.Reference `json:"organizationIdRef,omitempty" tf:"-"`

	// Selector for a Organization in organization to populate organizationId.
	// +kubebuilder:validation:Optional
	OrganizationIDSelector *v1.Selector `json:"organizationIdSelector,omitempty" tf:"-"`

	// The Azure subscription ID.
	// +kubebuilder:validation:Required
	SubscriptionID *string `json:"subscriptionId" tf:"subscription_id,omitempty"`

	// The Azure tenant ID.
	// +kubebuilder:validation:Required
	TenantID *string `json:"tenantId" tf:"tenant_id,omitempty"`
}

// CredentialAzureSpec defines the desired state of CredentialAzure
type CredentialAzureSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CredentialAzureParameters `json:"forProvider"`
}

// CredentialAzureStatus defines the observed state of CredentialAzure.
type CredentialAzureStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CredentialAzureObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CredentialAzure is the Schema for the CredentialAzures API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,taikunjet}
type CredentialAzure struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CredentialAzureSpec   `json:"spec"`
	Status            CredentialAzureStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CredentialAzureList contains a list of CredentialAzures
type CredentialAzureList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CredentialAzure `json:"items"`
}

// Repository type metadata.
var (
	CredentialAzure_Kind             = "CredentialAzure"
	CredentialAzure_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CredentialAzure_Kind}.String()
	CredentialAzure_KindAPIVersion   = CredentialAzure_Kind + "." + CRDGroupVersion.String()
	CredentialAzure_GroupVersionKind = CRDGroupVersion.WithKind(CredentialAzure_Kind)
)

func init() {
	SchemeBuilder.Register(&CredentialAzure{}, &CredentialAzureList{})
}
